generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id               Int          @id @default(autoincrement())
  nombre           String
  contrase√±a      String
  mail             String       @unique
  rolPostulante    Boolean
  nombreUsuario    String       @unique
  esAdmin          Boolean      @default(false)
  fotoPerfil     String?
  fechaNacimiento DateTime?
  descripcion      String?
  formulario       Formulario[]
  ofertasCreadas   Oferta[]     @relation("UsuarioOfertas")
  proyectosCreados Proyecto[]   @relation("UsuarioProyectos")

  @@map("usuario")
}

//Creamos la entidad intermedia entre postulante y oferta
model Formulario {
  postuladoId Int
  postulado   Usuario @relation(fields: [postuladoId], references: [id])
  ofertaId    Int
  oferta      Oferta  @relation(fields: [ofertaId], references: [id])
  nombre      String
  apellido    String
  localidad   String
  pais        String
  genero      String
  descripcion String
  curriculum  String

  @@id([postuladoId, ofertaId])
}

model Oferta {
  id         Int          @id @default(autoincrement())
  categoria  String
  ubicacion  String
  sueldo     Int?
  modalidad  String
  horario    String
  creadorId  Int
  formulario Formulario[]
  creador    Usuario      @relation("UsuarioOfertas", fields: [creadorId], references: [id])
}

model Proyecto {
  id                Int      @id @default(autoincrement())
  nombre            String
  descripcion       String
  tecnologiasUsadas String
  createdAt         DateTime @default(now())
  creadorId         Int
  creador           Usuario  @relation("UsuarioProyectos", fields: [creadorId], references: [id])
}
